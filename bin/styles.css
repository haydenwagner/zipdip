body,
html {
  margin: 0;
}
body {
  display: flex;
  flex-direction: column;
}
svg {
  vertical-align: baseline;
}
* {
  box-sizing: border-box;
}
header {
  margin-bottom: 2rem;
  background: #329584;
}
header h1 {
  text-align: center;
  padding: .5rem 1rem;
  margin: 0 0 .5rem 0;
  color: white;
}
header h1 div.icon {
  width: 1.5rem;
  margin: 0 .1rem;
}
header p {
  margin: .5rem 1rem 0 1rem;
}
label {
  text-align: center;
  width: 100%;
}
.icon {
  width: 20%;
}
#chart-content {
  margin-bottom: 1.5rem;
}
#chart-content .row {
  display: flex;
  justify-content: space-around;
  padding: 12px 0 10px;
}
#chart-content .row:nth-child(odd) {
  background: #ddd;
}
#chart-content .row > div {
  display: flex;
  flex: 1;
  justify-content: center;
  align-items: center;
}
#generated {
  display: flex;
  justify-content: center;
}
footer {
  width: 100%;
  display: flex;
  padding: 1rem;
  color: #333;
  margin-top: auto;
}
footer .spacer {
  flex: 1 1 20%;
}
footer #icon-attributions {
  flex: 4 1 80%;
  display: flex;
  flex-direction: column;
}
footer #icon-attributions label {
  text-align: left;
  margin-bottom: 1rem;
}
footer #icon-attributions div:not(.icon) {
  margin-bottom: .5rem;
  font-size: .75rem;
}
footer #icon-attributions .icon {
  width: 20px;
  display: inline-block;
  margin-right: .33rem;
  vertical-align: middle;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL0M6L1VzZXJzL0hheWRlbi9Eb2N1bWVudHMvZGV2L2dpdGh1Yi96aXBkaXAvc3JjL3N0eWxlcy9zdHlsZXMubGVzcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL3N0eWxlcy5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBOztFQUVFO0NDRkQ7QURLRDtFQUNFO0VBQ0E7Q0NIRDtBRE1EO0VBQ0U7Q0NKRDtBRE9EO0VBQ0U7Q0NMRDtBRFFEO0VBQ0U7RUFDQTtDQ05EO0FESUQ7RUFpQkk7RUFDQTtFQUNBO0VBRUE7Q0NuQkg7QURGRDtFQXdCTTtFQUNBO0NDbkJMO0FETkQ7RUE4Qkk7Q0NyQkg7QUR5QkQ7RUFFRTtFQUNBO0NDeEJEO0FEMkJEO0VBR0U7Q0MzQkQ7QURrQ0Q7RUFDRTtDQ2hDRDtBRCtCRDtFQUlJO0VBQ0E7RUFFQTtDQ2pDSDtBRG1DRztFQUNFO0NDakNMO0FEb0NHO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7Q0NsQ0w7QUR1Q0Q7RUFDRTtFQUNBO0NDckNEO0FENENEO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtDQzFDRDtBRHFDRDtFQVFJO0NDMUNIO0FEa0NEO0VBWUk7RUFDQTtFQUNBO0NDM0NIO0FENkJEO0VBaUJNO0VBQ0E7Q0MzQ0w7QUR5QkQ7RUFzQk07RUFDQTtDQzVDTDtBRHFCRDtFQTBCTTtFQUNBO0VBQ0E7RUFDQTtDQzVDTCIsImZpbGUiOiJzdHlsZXMuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQHByaW1hcnk6ICMzMjk1ODQ7XG5Ac2Vjb25kYXJ5OiAjZWExZDYyO1xuXG5ib2R5LFxuaHRtbHtcbiAgbWFyZ2luOiAwO1xufVxuXG5ib2R5e1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG5zdmd7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuKntcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuaGVhZGVye1xuICBtYXJnaW4tYm90dG9tOiAycmVtO1xuICBiYWNrZ3JvdW5kOiBAcHJpbWFyeTtcbiAgLy9mb250LWZhbWlseSA6XCJUcmVidWNoZXQgTVNcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmO1xuICAvL2xpbmUtaGVpZ2h0OiAxLjY7XG5cbiAgcGF0aHtcbiAgICAvL2ZpbGw6ICNkZGQ7XG4gIH1cblxuXG4gIGgxe1xuICAgIC8vZm9udC1mYW1pbHk6IFwiVHJlYnVjaGV0IE1TXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjtcbiAgICAvL2ZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIC8vZm9udC1zaXplOiAzMHB4O1xuICAgIC8vbGV0dGVyLXNwYWNpbmc6IGluaXRpYWw7XG4gICAgLy9kaXNwbGF5OiBmbGV4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAuNXJlbSAxcmVtO1xuICAgIG1hcmdpbjogMCAwIC41cmVtIDA7XG4gICAgLy9iYWNrZ3JvdW5kOiBpbmRpYW5yZWQ7XG4gICAgY29sb3I6IHdoaXRlO1xuXG4gICAgZGl2Lmljb257XG4gICAgICB3aWR0aDogMS41cmVtO1xuICAgICAgbWFyZ2luOiAwIC4xcmVtO1xuICAgIH1cbiAgfVxuXG4gIHB7XG4gICAgbWFyZ2luOiAuNXJlbSAxcmVtIDAgMXJlbTtcbiAgfVxufVxuXG5sYWJlbCB7XG4gIC8vZm9udDogYm9sZCAxcmVtIFwiVHJlYnVjaGV0IE1TXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmljb257XG4gIC8vd2lkdGg6IDUwcHg7XG4gIC8vbWF4LXdpZHRoOiA1MHB4O1xuICB3aWR0aDogMjAlO1xuXG4gIHN2Z3tcblxuICB9XG59XG5cbiNjaGFydC1jb250ZW50e1xuICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XG5cbiAgLnJvd3tcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICAgIC8vbWFyZ2luLWJvdHRvbTogLjVyZW07XG4gICAgcGFkZGluZzogMTJweCAwIDEwcHg7XG4gICAgXG4gICAgJjpudGgtY2hpbGQob2RkKXtcbiAgICAgIGJhY2tncm91bmQ6ICNkZGQ7XG4gICAgfVxuXG4gICAgJiA+IGRpdntcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4OjE7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfVxuICB9XG59XG5cbiNnZW5lcmF0ZWR7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG4gIGJ1dHRvbntcblxuICB9XG59XG5cbmZvb3RlcntcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHBhZGRpbmc6IDFyZW07XG4gIGNvbG9yOiAjMzMzO1xuICBtYXJnaW4tdG9wOiBhdXRvO1xuXG4gIC5zcGFjZXJ7XG4gICAgZmxleDogMSAxIDIwJTtcbiAgfVxuXG4gICNpY29uLWF0dHJpYnV0aW9uc3tcbiAgICBmbGV4OiA0IDEgODAlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxuICAgIGxhYmVse1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgfVxuXG4gICAgZGl2Om5vdCguaWNvbil7XG4gICAgICBtYXJnaW4tYm90dG9tOiAuNXJlbTtcbiAgICAgIGZvbnQtc2l6ZTogLjc1cmVtO1xuICAgIH1cbiAgICAuaWNvbntcbiAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgbWFyZ2luLXJpZ2h0OiAuMzNyZW07XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgIH1cbiAgfVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9zdHlsZXMvQzovVXNlcnMvSGF5ZGVuL0RvY3VtZW50cy9kZXYvZ2l0aHViL3ppcGRpcC9zcmMvc3R5bGVzL3N0eWxlcy5sZXNzIiwiYm9keSxcbmh0bWwge1xuICBtYXJnaW46IDA7XG59XG5ib2R5IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbnN2ZyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuaGVhZGVyIHtcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbiAgYmFja2dyb3VuZDogIzMyOTU4NDtcbn1cbmhlYWRlciBoMSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZzogLjVyZW0gMXJlbTtcbiAgbWFyZ2luOiAwIDAgLjVyZW0gMDtcbiAgY29sb3I6IHdoaXRlO1xufVxuaGVhZGVyIGgxIGRpdi5pY29uIHtcbiAgd2lkdGg6IDEuNXJlbTtcbiAgbWFyZ2luOiAwIC4xcmVtO1xufVxuaGVhZGVyIHAge1xuICBtYXJnaW46IC41cmVtIDFyZW0gMCAxcmVtO1xufVxubGFiZWwge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xufVxuLmljb24ge1xuICB3aWR0aDogMjAlO1xufVxuI2NoYXJ0LWNvbnRlbnQge1xuICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XG59XG4jY2hhcnQtY29udGVudCAucm93IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIHBhZGRpbmc6IDEycHggMCAxMHB4O1xufVxuI2NoYXJ0LWNvbnRlbnQgLnJvdzpudGgtY2hpbGQob2RkKSB7XG4gIGJhY2tncm91bmQ6ICNkZGQ7XG59XG4jY2hhcnQtY29udGVudCAucm93ID4gZGl2IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleDogMTtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4jZ2VuZXJhdGVkIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5mb290ZXIge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgcGFkZGluZzogMXJlbTtcbiAgY29sb3I6ICMzMzM7XG4gIG1hcmdpbi10b3A6IGF1dG87XG59XG5mb290ZXIgLnNwYWNlciB7XG4gIGZsZXg6IDEgMSAyMCU7XG59XG5mb290ZXIgI2ljb24tYXR0cmlidXRpb25zIHtcbiAgZmxleDogNCAxIDgwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbmZvb3RlciAjaWNvbi1hdHRyaWJ1dGlvbnMgbGFiZWwge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuZm9vdGVyICNpY29uLWF0dHJpYnV0aW9ucyBkaXY6bm90KC5pY29uKSB7XG4gIG1hcmdpbi1ib3R0b206IC41cmVtO1xuICBmb250LXNpemU6IC43NXJlbTtcbn1cbmZvb3RlciAjaWNvbi1hdHRyaWJ1dGlvbnMgLmljb24ge1xuICB3aWR0aDogMjBweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tcmlnaHQ6IC4zM3JlbTtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9zdHlsZXMvc3R5bGVzLmxlc3MiXSwic291cmNlUm9vdCI6IiJ9*/